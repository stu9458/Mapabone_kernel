From e212c8206bbe5e7329e96596aef6716091dd977a Mon Sep 17 00:00:00 2001
From: "B. Scott Michel" <bscottm@ieee.org>
Date: Thu, 29 May 2014 09:56:48 -0700
Subject: [PATCH 4/4] SGX: am335x_feature_detection

Identify AM335x chip versions, detect and enable chip-specific
features such as the SGX GPU's presence and L2 cache.

Signed-off-by: B. Scott Michel <bscottm@ieee.org>
Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 arch/arm/mach-omap2/control.h |  6 ++++++
 arch/arm/mach-omap2/id.c      | 44 +++++++++++++++++++++++++++++++++++++++++--
 arch/arm/mach-omap2/io.c      |  2 +-
 arch/arm/mach-omap2/soc.h     |  3 +++
 4 files changed, 52 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-omap2/control.h b/arch/arm/mach-omap2/control.h
index 12d8468..7adefd4 100644
--- a/arch/arm/mach-omap2/control.h
+++ b/arch/arm/mach-omap2/control.h
@@ -402,6 +402,12 @@
 #define		FEAT_NEON_NONE		1
 
 
+/* AM335X DEV_FEATURES register */
+#define AM335X_DEV_FEATURES				0x604
+
+#define AM335X_SGX_SHIFT		29
+#define AM335X_SGX_MASK			(1 << AM335X_SGX_SHIFT)
+
 #ifndef __ASSEMBLY__
 #ifdef CONFIG_ARCH_OMAP2PLUS
 extern void __iomem *omap_ctrl_base_get(void);
diff --git a/arch/arm/mach-omap2/id.c b/arch/arm/mach-omap2/id.c
index 45cc7ed4..9486a02 100644
--- a/arch/arm/mach-omap2/id.c
+++ b/arch/arm/mach-omap2/id.c
@@ -289,6 +289,29 @@ void __init ti81xx_check_features(void)
 	omap3_cpuinfo();
 }
 
+void __init am33xx_check_features(void)
+{
+	omap_features = OMAP3_HAS_NEON;
+
+        /*
+	 * am335x() fixups:
+	 * - The DEV_FEATURES register knows whether the SoC has SGX.
+	 */
+	if (soc_is_am335x()) {
+		u32 status;
+
+		status = omap_ctrl_readl(AM335X_DEV_FEATURES);
+
+		if (((status & AM335X_SGX_MASK) >> AM335X_SGX_SHIFT) == 1) {
+			omap_features |= OMAP3_HAS_SGX;
+		}
+
+		omap_features |= OMAP3_HAS_L2CACHE;
+	}
+
+	omap3_cpuinfo();
+}
+
 void __init omap3xxx_check_revision(void)
 {
 	u32 cpuid, idcode;
@@ -399,8 +422,25 @@ void __init omap3xxx_check_revision(void)
 		}
 		break;
 	case 0xb944:
-		omap_revision = AM335X_REV_ES1_0;
-		cpu_rev = "1.0";
+		switch (rev) {
+		case 0:
+			omap_revision = AM335X_REV_ES1_0;
+			cpu_rev = "1.0";
+			break;
+		case 1:
+			omap_revision = AM335X_REV_ES2_0;
+			cpu_rev = "2.0";
+			break;
+		case 2:
+			omap_revision = AM335X_REV_ES2_1;
+			cpu_rev = "2.1";
+			break;
+		default:
+			/* Assume 1.0 silicon errata if invalid. */
+			omap_revision = AM335X_REV_ES1_0;
+			cpu_rev = "1.0";
+			break;
+		}
 		break;
 	case 0xb8f2:
 		switch (rev) {
diff --git a/arch/arm/mach-omap2/io.c b/arch/arm/mach-omap2/io.c
index 5c445ca..522864c 100644
--- a/arch/arm/mach-omap2/io.c
+++ b/arch/arm/mach-omap2/io.c
@@ -568,7 +568,7 @@ void __init am33xx_init_early(void)
 	omap2_set_globals_prm(AM33XX_L4_WK_IO_ADDRESS(AM33XX_PRCM_BASE));
 	omap2_set_globals_cm(AM33XX_L4_WK_IO_ADDRESS(AM33XX_PRCM_BASE), NULL);
 	omap3xxx_check_revision();
-	ti81xx_check_features();
+	am33xx_check_features();
 	am33xx_voltagedomains_init();
 	am33xx_powerdomains_init();
 	am33xx_clockdomains_init();
diff --git a/arch/arm/mach-omap2/soc.h b/arch/arm/mach-omap2/soc.h
index f31d907..068893e 100644
--- a/arch/arm/mach-omap2/soc.h
+++ b/arch/arm/mach-omap2/soc.h
@@ -387,6 +387,8 @@ IS_OMAP_TYPE(3430, 0x3430)
 
 #define AM335X_CLASS		0x33500033
 #define AM335X_REV_ES1_0	AM335X_CLASS
+#define AM335X_REV_ES2_0	(AM335X_CLASS | (0x1 << 8))
+#define AM335X_REV_ES2_1	(AM335X_CLASS | (0x2 << 8))
 
 #define OMAP443X_CLASS		0x44300044
 #define OMAP4430_REV_ES1_0	(OMAP443X_CLASS | (0x10 << 8))
@@ -412,6 +414,7 @@ void omap4xxx_check_revision(void);
 void omap5xxx_check_revision(void);
 void omap3xxx_check_features(void);
 void ti81xx_check_features(void);
+void am33xx_check_features(void);
 void omap4xxx_check_features(void);
 
 /*
-- 
2.0.0.rc2

